// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Topic int32

const (
	Topic_UNKNOWN                 Topic = 0
	Topic_COLLATION_BODY_REQUEST  Topic = 1
	Topic_COLLATION_BODY_RESPONSE Topic = 2
)

var Topic_name = map[int32]string{
	0: "UNKNOWN",
	1: "COLLATION_BODY_REQUEST",
	2: "COLLATION_BODY_RESPONSE",
}
var Topic_value = map[string]int32{
	"UNKNOWN":                 0,
	"COLLATION_BODY_REQUEST":  1,
	"COLLATION_BODY_RESPONSE": 2,
}

func (x Topic) String() string {
	return proto.EnumName(Topic_name, int32(x))
}
func (Topic) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_messages_2a7df8d6b801679c, []int{0}
}

type CollationBodyRequest struct {
	ShardId              uint64   `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Period               uint64   `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	ChunkRoot            []byte   `protobuf:"bytes,3,opt,name=chunk_root,json=chunkRoot,proto3" json:"chunk_root,omitempty"`
	ProposerAddress      []byte   `protobuf:"bytes,4,opt,name=proposer_address,json=proposerAddress,proto3" json:"proposer_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollationBodyRequest) Reset()         { *m = CollationBodyRequest{} }
func (m *CollationBodyRequest) String() string { return proto.CompactTextString(m) }
func (*CollationBodyRequest) ProtoMessage()    {}
func (*CollationBodyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_2a7df8d6b801679c, []int{0}
}
func (m *CollationBodyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollationBodyRequest.Unmarshal(m, b)
}
func (m *CollationBodyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollationBodyRequest.Marshal(b, m, deterministic)
}
func (dst *CollationBodyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollationBodyRequest.Merge(dst, src)
}
func (m *CollationBodyRequest) XXX_Size() int {
	return xxx_messageInfo_CollationBodyRequest.Size(m)
}
func (m *CollationBodyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CollationBodyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CollationBodyRequest proto.InternalMessageInfo

func (m *CollationBodyRequest) GetShardId() uint64 {
	if m != nil {
		return m.ShardId
	}
	return 0
}

func (m *CollationBodyRequest) GetPeriod() uint64 {
	if m != nil {
		return m.Period
	}
	return 0
}

func (m *CollationBodyRequest) GetChunkRoot() []byte {
	if m != nil {
		return m.ChunkRoot
	}
	return nil
}

func (m *CollationBodyRequest) GetProposerAddress() []byte {
	if m != nil {
		return m.ProposerAddress
	}
	return nil
}

type CollationBodyResponse struct {
	HeaderHash           []byte   `protobuf:"bytes,1,opt,name=header_hash,json=headerHash,proto3" json:"header_hash,omitempty"`
	Body                 []byte   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollationBodyResponse) Reset()         { *m = CollationBodyResponse{} }
func (m *CollationBodyResponse) String() string { return proto.CompactTextString(m) }
func (*CollationBodyResponse) ProtoMessage()    {}
func (*CollationBodyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_2a7df8d6b801679c, []int{1}
}
func (m *CollationBodyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollationBodyResponse.Unmarshal(m, b)
}
func (m *CollationBodyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollationBodyResponse.Marshal(b, m, deterministic)
}
func (dst *CollationBodyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollationBodyResponse.Merge(dst, src)
}
func (m *CollationBodyResponse) XXX_Size() int {
	return xxx_messageInfo_CollationBodyResponse.Size(m)
}
func (m *CollationBodyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CollationBodyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CollationBodyResponse proto.InternalMessageInfo

func (m *CollationBodyResponse) GetHeaderHash() []byte {
	if m != nil {
		return m.HeaderHash
	}
	return nil
}

func (m *CollationBodyResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterType((*CollationBodyRequest)(nil), "messages.CollationBodyRequest")
	proto.RegisterType((*CollationBodyResponse)(nil), "messages.CollationBodyResponse")
	proto.RegisterEnum("messages.Topic", Topic_name, Topic_value)
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_messages_2a7df8d6b801679c) }

var fileDescriptor_messages_2a7df8d6b801679c = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4e, 0x32, 0x31,
	0x14, 0x85, 0xff, 0xe1, 0x47, 0xc0, 0x0b, 0xd1, 0x49, 0xa3, 0x38, 0x60, 0x8c, 0x84, 0x15, 0xba,
	0x90, 0x85, 0x4f, 0x00, 0x48, 0x22, 0x11, 0x67, 0xb4, 0x40, 0x8c, 0xab, 0xa6, 0xd0, 0x4a, 0x27,
	0xe2, 0xdc, 0xda, 0x3b, 0x2c, 0x78, 0x0e, 0x5f, 0xd8, 0xa4, 0x23, 0x1b, 0xdd, 0xdd, 0xf3, 0x9d,
	0xb3, 0xf8, 0x72, 0xe1, 0xe8, 0x43, 0x13, 0xc9, 0xb5, 0xa6, 0x1b, 0xeb, 0x30, 0x47, 0x56, 0xdb,
	0xe7, 0x76, 0x6b, 0x8d, 0xb8, 0xde, 0xe8, 0xbe, 0xe7, 0xcb, 0xed, 0x5b, 0x5f, 0x66, 0xbb, 0x62,
	0xd4, 0xfd, 0x0a, 0xe0, 0x64, 0x84, 0x9b, 0x8d, 0xcc, 0x53, 0xcc, 0x86, 0xa8, 0x76, 0x5c, 0x7f,
	0x6e, 0x35, 0xe5, 0xac, 0x05, 0x35, 0x32, 0xd2, 0x29, 0x91, 0xaa, 0x28, 0xe8, 0x04, 0xbd, 0x32,
	0xaf, 0xfa, 0x3c, 0x51, 0xac, 0x09, 0x15, 0xab, 0x5d, 0x8a, 0x2a, 0x2a, 0xf9, 0xe2, 0x27, 0xb1,
	0x0b, 0x80, 0x95, 0xd9, 0x66, 0xef, 0xc2, 0x21, 0xe6, 0xd1, 0xff, 0x4e, 0xd0, 0x6b, 0xf0, 0x43,
	0x4f, 0x38, 0x62, 0xce, 0xae, 0x20, 0xb4, 0x0e, 0x2d, 0x92, 0x76, 0x42, 0x2a, 0xe5, 0x34, 0x51,
	0x54, 0xf6, 0xa3, 0xe3, 0x3d, 0x1f, 0x14, 0xb8, 0x3b, 0x85, 0xd3, 0x5f, 0x52, 0x64, 0x31, 0x23,
	0xcd, 0x2e, 0xa1, 0x6e, 0xb4, 0x54, 0xda, 0x09, 0x23, 0xc9, 0x78, 0xb1, 0x06, 0x87, 0x02, 0xdd,
	0x4b, 0x32, 0x8c, 0x41, 0x79, 0x89, 0x6a, 0xe7, 0xcd, 0x1a, 0xdc, 0xdf, 0xd7, 0x8f, 0x70, 0x30,
	0x47, 0x9b, 0xae, 0x58, 0x1d, 0xaa, 0x8b, 0xf8, 0x21, 0x4e, 0x5e, 0xe2, 0xf0, 0x1f, 0x6b, 0x43,
	0x73, 0x94, 0x4c, 0xa7, 0x83, 0xf9, 0x24, 0x89, 0xc5, 0x30, 0xb9, 0x7b, 0x15, 0x7c, 0xfc, 0xbc,
	0x18, 0xcf, 0xe6, 0x61, 0xc0, 0xce, 0xe1, 0xec, 0x4f, 0x37, 0x7b, 0x4a, 0xe2, 0xd9, 0x38, 0x2c,
	0x2d, 0x2b, 0xfe, 0x73, 0xb7, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x68, 0x44, 0xe2, 0x70,
	0x01, 0x00, 0x00,
}
